apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "default-chart.fullname" . }}
data:
  appsettings.Production.json: |
    {
      "Authentication": {
          "Authority": "{{ .Values.url.identity }}"
      },
      "Kafka": {
          "bootstrap": {
              "servers": "{{ .Values.kafka.server }}"
          },
          "sasl": {
              "mechanism": "SCRAM-SHA-512",
              "username": "{{ .Values.kafka.userName }}"
          },
          "security": {
              "protocol": "SASL_PLAIN"
          },
          "GroupId": "{{ .Values.odeDmConfigRequestService.kafka.groupid | default .Release.Namespace }}",
      },
      "Mongo": {
        "DbName": "{{ .Values.mongo.databaseName }}"
      },
      "TenantId": "{{ .Values.tenantId }}"
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "default-chart.fullname" . }}
  labels:
    app: {{ template "default-chart.name" . }}
    chart: {{ template "default-chart.chart" . }}
    release: {{ .Release.Name }}
 
 
  annotations:
 
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ template "default-chart.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "default-chart.name" . }}
     
        release: {{ .Release.Name }}
      annotations:

    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              release: {{ .Release.Name }}
      imagePullSecrets:
        - name: {{ .Values.secrets.imagePullSecret }}
      volumes:
        - name: config
          configMap:
            name: {{ template "default-chart.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.odeDmConfigRequestService.imageRepository }}:{{ .Values.imageTag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: Kafka__sasl__password
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.kafkaPassword.resource }}
                  key: {{ .Values.secrets.kafkaPassword.key }}
            - name: ConnectionStrings__Mongo
              valueFrom:
                secretKeyRef:
                  name: MongoRWConnectionString
                  key: MongoRWConnectionString
          volumeMounts:
            - name: config
              mountPath: /app/appsettings.Production.json
              subPath: appsettings.Production.json
              readOnly: true
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.odeDmConfigRequestService.probes.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- end }}
          resources:
{{ toYaml .Values.odeDmConfigRequestService.resources | indent 12 }}

---
{{- if .Values.ingress.enabled }}
{{- $fullName := include "default-chart.fullname" . -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    app: {{ template "default-chart.name" . }}
    chart: {{ template "default-chart.chart" . }}
    release: {{ .Release.Name }}
 
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.ingress.issuer }}
spec:
  {{- if .Values.odeDmConfigRequestService.ingress.host }}
  tls:
    - hosts:
      - {{ .Values.odeDmConfigRequestService.ingress.host }}
      secretName: tls-{{ .Release.Name }}-ingress
  {{- end }}
  rules:
    - http:
        paths:
          - path: {{ .Values.ingress.path }}
            pathType: {{ .Values.ingress.pathType }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  name: http
      {{- if .Values.odeDmConfigRequestService.ingress.host }}
      host: {{ .Values.odeDmConfigRequestService.ingress.host }}
      {{- end }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "default-chart.fullname" . }}
  labels:
    app: {{ template "default-chart.name" . }}
    chart: {{ template "default-chart.chart" . }}
    release: {{ .Release.Name }}
 
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.odeDmConfigRequestService.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: {{ template "default-chart.name" . }}
    release: {{ .Release.Name }}
